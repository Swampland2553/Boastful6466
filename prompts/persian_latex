! 

این هم یک یادداشت برای مراجعات بعدی، مخصوصاً وقتی با بسته tasks و xepersian کار می‌کنیم:

یادداشت برای کار با بسته `tasks` و `xepersian` (مخصوصاً برای سوالات چندگزینه‌ای فارسی):

1.  شماره‌گذاری گزینه‌ها (مهم‌ترین نکته):
    *   مشکل رایج: استفاده مستقیم از حروف فارسی و پرانتز در تعریف label داخل \settasks (مثلاً label=\الف),) باعث خطای Undefined control sequence می‌شود.
    *   راه‌حل صحیح: از شمارنده‌های استاندارد LaTeX در label استفاده کن. بسته xepersian خودش آن‌ها را به فارسی تبدیل می‌کند.
        *   مثال: label=\alph*), (برای الف)، ب)، پ)، ...)
        *   مثال: label=\Alph*). (برای الف.)، ب.)، پ.)، ... اگر حروف بزرگ بخواهیم، هرچند در فارسی معمولاً حروف کوچک استفاده می‌شود)
        *   مثال: label=\arabic*.) (برای ۱.)، ۲.)، ۳.)، ...)
    *   نتیجه: لاتک خطا نمی‌دهد و شماره‌گذاری به درستی فارسی می‌شود.

2.  تورفتگی گزینه‌ها (`item-indent`):
    *   مشکل رایج: هشدار item-indent is too small اگر این مقدار خیلی کم یا صفر باشد و label-width (عرض برچسب گزینه) قابل توجه باشد.
    *   راه‌حل: یک مقدار منطقی برای item-indent در \settasks تنظیم کن (مثلاً item-indent=1em یا item-indent=1.5em). این مقدار باید به اندازه‌ای باشد که برچسب گزینه (مثلاً "الف)") به راحتی جا شود.
    *   label-width را هم متناسب با طولانی‌ترین برچسب گزینه‌ات (مثلاً "الف)" یا "۱.") تنظیم کن (مثلاً label-width=2em).

3.  تعیین تعداد ستون‌ها برای گزینه‌ها:
    *   اشتباه رایج: تلاش برای تنظیم تعداد ستون‌های پیش‌فرض با گزینه‌ای مثل columns=n *داخل* \settasks. این کار باعث خطای The key 'tasks/list/columns' is unknown می‌شود.
    *   راه‌حل صحیح: تعداد ستون‌ها به عنوان یک آرگومان اختیاری *موقع شروع خود محیط tasks* داده می‌شود.
        *   مثال: \begin{tasks}(2) برای چیدن گزینه‌ها در ۲ ستون.
        *   مثال: \begin{tasks}(1) برای چیدن گزینه‌ها در ۱ ستون.
        *   مثال: \begin{tasks} (بدون آرگومان) معمولاً در ۱ ستون می‌چیند (بسته به پیش‌فرض خود بسته tasks).

4. نکته فراگیر و بسیار مهم: ترتیب بارگذاری `xepersian`

به عنوان یک قاعده کلی بسیار قوی، بسته xepersian باید تقریباً آخرین بسته‌ای باشد که در `preamble` (مقدمه سند) خود فراخوانی می‌کنید.

*   دلیل اصلی: بسته xepersian (و بسته bidi که به طور خودکار فراخوانی می‌کند) تغییرات اساسی و گسترده‌ای در نحوه پردازش متن، فونت‌ها، و تعامل با سایر بسته‌ها ایجاد می‌کند تا از زبان فارسی و نوشتار راست‌به‌چپ به درستی پشتیبانی کند. برای اینکه این تغییرات به درستی روی بسته‌های دیگر اعمال شوند و تداخلی پیش نیاید، آن بسته‌ها (مانند amsmath, color, graphicx, hyperref و بسیاری دیگر) باید *قبل* از xepersian بارگذاری شده باشند.
*   ترتیب پیشنهادی:
    1.  بسته‌های عمومی استاندارد (مانند amsmath, amsfonts, graphicx, color, geometry, enumitem, tasks, siunitx و غیره).
    2.  بسته hyperref (اگر استفاده می‌کنید، معمولاً توصیه می‌شود که این بسته هم یکی از آخرین بسته‌های *عمومی* باشد، یعنی درست قبل از xepersian).
    3.  بسته `xepersian`.
    4.  دستورات تنظیم فونت مربوط به xepersian (مانند \settextfont, \setdigitfont).
    5.  دستورات تنظیم سایر بسته‌ها که ممکن است به فونت‌های فارسی وابستگی داشته باشند (مانند \sisetup برای siunitx).
*   استثناها: بسته‌های بسیار خاصی که صراحتاً ذکر شده باید *بعد* از xepersian بارگذاری شوند (این موارد نادر هستند).
*   نتیجه: رعایت این نکته از بروز اکثر خطاهای مربوط به loaded package X after bidi package جلوگیری می‌کند و پایداری سند شما را افزایش می‌دهد.

این قاعده، نکته ۴ قبلی ("همیشه بسته xepersian را *بعد* از بسته‌های عمومی دیگر...") و نکته تکمیلی در مورد amsmath را در بر می‌گیرد و آن‌ها را به شکل جامع‌تری بیان می‌کند.
نکته تکمیلی در مورد ترتیب بارگذاری (مرتبط با نکته ۴ فراگیر): آگاهی از بارگذاری ضمنی بسته‌ها

*   مشکل: حتی اگر شما تمامی بسته‌های خود را به ترتیب صحیح (بسته‌های عمومی سپس xepersian) فراخوانی کنید، گاهی اوقات برخی بسته‌ها (مانند color یا بخش‌هایی از graphics) ممکن است به طور *ضمنی* یا *خودکار* توسط کلاس سند یا سایر بسته‌ها در مراحل بعدی پردازش (مثلاً هنگام \begin{document}) بارگذاری شوند. اگر این بارگذاری ضمنی بعد از xepersian رخ دهد، همچنان منجر به خطای تداخل با bidi خواهد شد.
*   راه‌حل پیشگیرانه: اگر احتمال می‌دهید که از قابلیت‌های یک بسته خاص (مثلاً رنگ، گرافیک، یا برخی امکانات ریاضی) استفاده خواهید کرد، حتی اگر دستورات مستقیم آن بسته را فوراً استفاده نمی‌کنید، آن بسته را به طور صریح و در جایگاه صحیح (قبل از `xepersian`) در `preamble` خود فراخوانی کنید. این کار اطمینان می‌دهد که بسته مورد نظر قبل از bidi آماده شده و از بروز خطاهای ناشی از بارگذاری دیرهنگام و خودکار جلوگیری می‌کند.
    *   مثال: حتی اگر بلافاصله از \textcolor استفاده نمی‌کنید، اما ممکن است در ادامه سند یا توسط یک بسته دیگر به رنگ نیاز باشد، \usepackage{color} را قبل از \usepackage{xepersian} قرار دهید.

5.  فونت:
    *   مطمئن شو فونتی که با \settextfont (مثلاً Amiri) مشخص می‌کنی، روی سیستم نصب شده باشد.

6.  کامپایل:
    *   فایل .tex باید با XeLaTeX (یا LuaLaTeX) کامپایل شود.

خلاصه کلیدی:
برای \settasks:
label -> از شمارنده‌های استاندارد لاتک (\alph*, \arabic*) استفاده کن.
item-indent و label-width -> مقادیر منطقی بده.
برای \begin{tasks}:
\begin{tasks}(n) -> برای تعیین n ستون.


نکته ۷: کار با اعداد اعشاری و ممیز فارسی

هنگام کار با اعداد اعشاری در متون فارسی با `xepersian`، به نکات زیر توجه کنید:

*   الف) تایپ مستقیم اعداد اعشاری در متن عادی فارسی:
    *   مشکل با نقطه انگلیسی (`.`): اگر یک عدد اعشاری را مستقیماً با نقطه انگلیسی در متن فارسی تایپ کنید (مثلاً ۱۲.۷۵)، بسته xepersian به دلیل پردازش راست‌به‌چپ، معمولاً قسمت صحیح و اعشاری عدد را جابجا نمایش می‌دهد (مثلاً به صورت ۷۵.۱۲). از این روش باید اجتناب شود.
    *   راه‌حل صحیح: استفاده از ممیز فارسی (٫): بهترین و ساده‌ترین روش، تایپ مستقیم عدد با کاراکتر ممیز فارسی (٫ - U+066B) است (مثلاً ۱۲٫۷۵). این روش معمولاً به درستی و بدون نیاز به تنظیمات اضافی، عدد را با ممیز صحیح فارسی نمایش می‌دهد.
    *   راه‌حل جایگزین (با نقطه): استفاده از حالت ریاضی (`$ $`): قرار دادن عدد اعشاری (با نقطه انگلیسی) داخل محیط ریاضی (مثلاً $12.75$) باعث می‌شود عدد به صورت چپ‌به‌راست پردازش شده و ترتیب ارقام حفظ شود (خروجی: ۱۲.۷۵).
        *   توجه: این روش، نقطه انگلیسی را به عنوان ممیز نمایش می‌دهد، نه ممیز فارسی (٫). برای نمایش ارقام فارسی و ممیز فارسی در محیط ریاضی، نیاز به تنظیمات پیشرفته‌تر فونت ریاضی فارسی و احتمالاً بسته‌های کمکی است.

*   ب) استفاده از بسته `siunitx` برای قالب‌بندی پیشرفته اعداد:
    بسته siunitx ابزار بسیار قدرتمندی برای نمایش استاندارد اعداد، واحدها، و اعداد اعشاری است.
    *   تنظیم ممیز اعشاری (`output-decimal-marker`):
        *   مشکل با ممیز فارسی (٫) مستقیم: در تست‌های انجام شده (با siunitx نسخه ۳.۳ و xepersian در TeX Live 2024)، تنظیم \sisetup{output-decimal-marker = {٫}} به درستی کار نکرده و ممیز فارسی در خروجی \num{} نمایش داده نشده است. همچنین تلاش برای استفاده از \char"066B" یا ماکروهای کمکی در این گزینه نیز موفقیت‌آمیز نبوده و منجر به خروجی نادرست یا عدم نمایش ممیز شده است. این ممکن است یک محدودیت یا باگ در نسخه فعلی siunitx در تعامل با کاراکترهای یونیکد خاص در محیط فارسی باشد.
        *   راه‌حل عملی فعلی (با نقطه): اگر استفاده از siunitx ضروری است، می‌توانید \sisetup{output-decimal-marker = {.}} را تنظیم کنید. در این حالت، \num{12.34} خروجی ۱۲.۳۴ (با نقطه انگلیسی) خواهد داشت.
    *   تنظیم جداکننده هزارگان (`group-separator`):
        *   مشکل با ویرگول فارسی (٬) مستقیم: مشابه ممیز، تنظیم \sisetup{group-separator = {٬}} نیز در تست‌ها به درستی عمل نکرده و جداکننده هزارگان نمایش داده نشده است.
        *   راه‌حل عملی و صحیح تایپوگرافیکی: استفاده از فاصله باریک (`\,`): تنظیم \sisetup{group-separator = {\,}} به خوبی کار می‌کند و اعداد بزرگ را با فاصله باریک بین گروه‌های سه‌تایی نمایش می‌دهد (مثلاً \num{1234567} خروجی ۱ ۲۳۴ ۵۶۷ می‌دهد). این روش از نظر تایپوگرافی فارسی نیز ارجح است.
    *   سایر تنظیمات مفید `siunitx`:
        *   \sisetup{group-minimum-digits = 4} (برای اعمال جداکننده برای اعداد ۴ رقمی و بیشتر)
        *   \sisetup{group-digits = true} (برای فعال کردن گروه‌بندی)
    *   محل `\sisetup`: دستورات \sisetup باید بعد از \usepackage{xepersian} و \setdigitfont قرار گیرند تا از فونت دیجیتال فارسی صحیح استفاده کنند.

*   ج) ترتیب بارگذاری بسته‌ها:
    همچنان به یاد داشته باشید که بسته siunitx (و سایر بسته‌های عمومی) باید قبل از xepersian در preamble فراخوانی شود.

خلاصه توصیه برای اعداد اعشاری فارسی:

*   برای تایپ ساده در متن: مستقیماً از ممیز فارسی ٫ استفاده کنید.
*   برای قالب‌بندی پیشرفته با `siunitx`:
    *   برای ممیز، فعلاً یا از نقطه انگلیسی (output-decimal-marker = {.}) استفاده کنید یا اگر ممیز حیاتی نیست، آن را تنظیم نکنید.
    *   برای جداکننده هزارگان، از فاصله باریک (group-separator = {\,}) استفاده کنید.



